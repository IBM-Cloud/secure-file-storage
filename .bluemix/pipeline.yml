---
stages:
- name: BUILD
  inputs:
  - type: git
    branch: ${GIT_BRANCH}
    service: ${GIT_REPO}
  triggers:
  - type: commit
  jobs:
  - name: Build Docker image
    type: builder
    build_type: cr
    # artifact_dir: output
    target:
      region_id: ${REGISTRY_REGION_ID}
      api_key: ${API_KEY}
    namespace: ${REGISTRY_NAMESPACE}
    image_name: ${IMAGE_NAME}
    script: |
      #!/bin/bash
      ./scripts/pipeline-BUILD.sh
- name: DEPLOY
  inputs:
  - type: job
    stage: BUILD
    job: Build Docker image
  triggers:
  - type: stage
  properties:
  - name: buildprops
    value: build.properties
    type: file
  - name: TARGET_NAMESPACE
    value: ${TARGET_NAMESPACE}
    type: text
  - name: TARGET_RESOURCE_GROUP
    value: ${TARGET_RESOURCE_GROUP}
    type: text
  - name: COS_PLAN
    value: "lite"
    type: text
  - name: APP_ID_PLAN
    value: "lite"
    type: text
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${TARGET_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${TARGET_CLUSTER_NAME}
      resource_group: ${TARGET_RESOURCE_GROUP}
    script: |
      #!/bin/bash
      ./scripts/pipeline-DEPLOY.sh
- name: ROTATE STORAGE KEYS (manual)
  inputs:
  - type: job
    stage: BUILD
    job: Build Docker image
  properties:
  - name: buildprops
    value: build.properties
    type: file
  - name: TARGET_NAMESPACE
    value: ${TARGET_NAMESPACE}
    type: text
  - name: TARGET_RESOURCE_GROUP
    value: ${TARGET_RESOURCE_GROUP}
    type: text
  triggers:
  - type: stage
    enabled: false
  jobs:
  - name: Rotate Storage Keys
    type: deployer
    target:
      region_id: ${TARGET_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${TARGET_CLUSTER_NAME}
      resource_group: ${TARGET_RESOURCE_GROUP}
    script: |
      #!/bin/bash
      ./scripts/pipeline-ROTATE_STORAGE_CREDENTIALS.sh
- name: ROTATE APPID KEY (manual)
  inputs:
  - type: job
    stage: BUILD
    job: Build Docker image
  properties:
  - name: buildprops
    value: build.properties
    type: file
  - name: TARGET_NAMESPACE
    value: ${TARGET_NAMESPACE}
    type: text
  - name: TARGET_RESOURCE_GROUP
    value: ${TARGET_RESOURCE_GROUP}
    type: text
  triggers:
  - type: stage
    enabled: false
  jobs:
  - name: Rotate AppID Key
    type: deployer
    target:
      region_id: ${TARGET_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${TARGET_CLUSTER_NAME}
      resource_group: ${TARGET_RESOURCE_GROUP}
    script: |
      #!/bin/bash
      ./scripts/pipeline-ROTATE_APPID_CREDENTIALS.sh
- name: ROTATE REGISTRY KEY (manual)
  inputs:
  - type: job
    stage: BUILD
    job: Build Docker image
  properties:
  - name: buildprops
    value: build.properties
    type: file
  - name: TARGET_NAMESPACE
    value: ${TARGET_NAMESPACE}
    type: text
  - name: TARGET_RESOURCE_GROUP
    value: ${TARGET_RESOURCE_GROUP}
    type: text
  triggers:
  - type: stage
    enabled: false
  jobs:
  - name: Rotate Registry Key
    type: deployer
    target:
      region_id: ${TARGET_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${TARGET_CLUSTER_NAME}
      resource_group: ${TARGET_RESOURCE_GROUP}
    script: |
      #!/bin/bash
      ./scripts/pipeline-ROTATE_REGISTRY_CREDENTIALS.sh
- name: UNINSTALL (manual)
  inputs:
  - type: job
    stage: BUILD
    job: Build Docker image
  properties:
  - name: buildprops
    value: build.properties
    type: file
  - name: TARGET_NAMESPACE
    value: ${TARGET_NAMESPACE}
    type: text
  - name: TARGET_RESOURCE_GROUP
    value: ${TARGET_RESOURCE_GROUP}
    type: text
  triggers:
  - type: stage
    enabled: false
  jobs:
  - name: Uninstall
    type: deployer
    target:
      region_id: ${TARGET_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${TARGET_CLUSTER_NAME}
      resource_group: ${TARGET_RESOURCE_GROUP}
    script: |
      #!/bin/bash
      ./scripts/pipeline-UNINSTALL.sh
